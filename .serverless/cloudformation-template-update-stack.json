{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cesar-prueba-backend-prod-api"
      }
    },
    "ApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "prueba-ce",
          "S3Key": "serverless/cesar-prueba-backend/prod/1734984641134-2024-12-23T20:10:41.134Z/cesar-prueba-backend.zip"
        },
        "Handler": "dist/serverless.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "cesar-prueba-backend-prod-api",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "SWAPI_API_URL": "https://swapi.py4e.com/api",
            "DB_HOST": "userdb.cmompg7okqmo.us-east-2.rds.amazonaws.com",
            "DB_NAME": "prueba-cesar",
            "DB_PASSWORD": "d0nejr5jvL5cP1djY7GY",
            "DB_USERNAME": "admin",
            "SERVER_URL": "https://qu2cqxv2kj.execute-api.us-east-2.amazonaws.com/prod/reto-tecnico-indra"
          }
        },
        "Role": "arn:aws:iam::319643186591:role/omnichannel-lambda-access-desa-role"
      },
      "DependsOn": [
        "ApiLogGroup"
      ]
    },
    "ApiLambdaVersion6fyzE7GeemJPQqOsyhbAO1Fv4cJT7XIk5etsqbIatJg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ApiLambdaFunction"
        },
        "CodeSha256": "6XfV8QMfmMTEz8YcjVWq0lUZm/bbV7bB9qIMpU7muus="
      }
    },
    "ApiGatewayResourceRetoDashtecnicoDashindra": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": "zeyuwoe3o3",
        "PathPart": "reto-tecnico-indra",
        "RestApiId": "qu2cqxv2kj"
      }
    },
    "ApiGatewayResourceRetoDashtecnicoDashindraProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRetoDashtecnicoDashindra"
        },
        "PathPart": "{proxy+}",
        "RestApiId": "qu2cqxv2kj"
      }
    },
    "ApiGatewayMethodRetoDashtecnicoDashindraProxyVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceRetoDashtecnicoDashindraProxyVar"
        },
        "RestApiId": "qu2cqxv2kj"
      }
    },
    "ApiGatewayMethodRetoDashtecnicoDashindraProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRetoDashtecnicoDashindraProxyVar"
        },
        "RestApiId": "qu2cqxv2kj",
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ApiLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1734984578236": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": "qu2cqxv2kj",
        "StageName": "prod"
      },
      "DependsOn": [
        "ApiGatewayMethodRetoDashtecnicoDashindraProxyVarOptions",
        "ApiGatewayMethodRetoDashtecnicoDashindraProxyVarAny"
      ]
    },
    "ApiLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              "qu2cqxv2kj",
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "prueba-ce",
      "Export": {
        "Name": "sls-cesar-prueba-backend-prod-ServerlessDeploymentBucketName"
      }
    },
    "ApiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ApiLambdaVersion6fyzE7GeemJPQqOsyhbAO1Fv4cJT7XIk5etsqbIatJg"
      },
      "Export": {
        "Name": "sls-cesar-prueba-backend-prod-ApiLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            "qu2cqxv2kj",
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/prod"
          ]
        ]
      },
      "Export": {
        "Name": "sls-cesar-prueba-backend-prod-ServiceEndpoint"
      }
    }
  }
}